# -*- mode: ruby -*-
# vi: set ft=ruby :

# Template environment for all of my vagrant vms. 
Vagrant.configure("2") do |config|

  # found box on this site: https://app.vagrantup.com/bento/boxes/ubuntu-16.04
  config.vm.box = "bento/ubuntu-18.04"
  config.vm.hostname = "development"

  # opens port 80 on the vm, and sets it to 8080 for the host.
  config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.10"

  # command below syncs the files to the virtual machine. nice.
  config.vm.synced_folder "/app/projects", "/app/projects", type: "nfs"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Customize the amount of memory on the VM:
    vb.memory = "4096"
  end

  # provision script, install all necessary items here
  config.vm.provision "shell", inline: <<-SHELL
    apt-get update && sleep 1 && apt-get upgrade -y
    apt-get install -y apache2 php libapache2-mod-php php-mysql php-zip php-mbstring php-xml && sleep 1
    sudo a2enmod rewrite
    sudo service apache2 restart
    echo "mysql-server mysql-server/root_password password toor" | sudo debconf-set-selections
    echo "mysql-server mysql-server/root_password_again password toor" | sudo debconf-set-selections
    apt-get install -y mysql-server
    sed -i 's/127\.0\.0\.1/0\.0\.0\.0/g' /etc/mysql/my.cnf
    mysql -uroot -p -e 'USE mysql; UPDATE `user` SET `Host`="%" WHERE `User`="root" AND `Host`="localhost"; DELETE FROM `user` WHERE `Host` != "%" AND `User`="root"; FLUSH PRIVILEGES;'
    service mysql restart
    cd / && sed -i -e 's/\r$//' ./vagrant/vagrant_configs/post_installation.bash
    sudo bash /vagrant/vagrant_configs/post_installation.bash
    source /home/vagrant/.profile
    echo "System successfully installed. Everything is good to go! Type vagrant ssh to go into your vm."
    echo "To create a new laravel project, just run 'laravel <project_name> and it will be created for you."
    echo "Project is accessible from 192.168.33.10 from your browser."
    echo "Your MySQL username is 'root' and password is also 'root'"
  SHELL
end
